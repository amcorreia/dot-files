
export DOCKER_REPO_PREFIX=amcorreia

del_dangling(){
    docker rmi -f $(docker images -f "dangling=true" -q)
}

del_stopped(){
    local name=$1
    local state
    state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker rm "$name"
    fi
}

relies_on(){
    for container in "$@"; do
        local state
        state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)

        if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
            echo "$container is not running, starting it for you."
            $container
        fi
    done
}

weechat() {
    del_stopped weechat
    # relies_on notify_osd

        #--user $USER \
    docker run --rm -it \
        -v /etc/localtime:/etc/localtime:ro \
        -v "${HOME}/.weechat:/home/user/.weechat" \
        --name weechat \
        --label weechat \
        ${DOCKER_REPO_PREFIX}/weechat
}

chrome(){
    # add flags for proxy if passed
    local proxy=
    local map
    local args=$*
    if [[ "$1" == "tor" ]]; then
        relies_on torproxy

        map="MAP * ~NOTFOUND , EXCLUDE torproxy"
        proxy="socks5://torproxy:9050"
        args="https://check.torproject.org/api/ip ${*:2}"
    fi

    del_stopped chrome
    # one day remove /etc/hosts bind mount when effing
    # overlay support inotify, such bullshit
    docker run -d \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e "DISPLAY=unix${DISPLAY}" \
        -v "${HOME}/Downloads:/root/Downloads" \
        -v "${HOME}/Pictures:/root/Pictures" \
        -v "${HOME}/Torrents:/root/Torrents" \
        -v "${HOME}/.chrome:/data" \
        -v /dev/shm:/dev/shm \
        -v /etc/hosts:/etc/hosts \
        --name chrome \
        ${DOCKER_REPO_PREFIX}/chrome --user-data-dir=/data \
        --proxy-server="$proxy" \
        --host-resolver-rules="$map" "$args"

        #--memory 3gb \
        #--device /dev/video0 \
        #--device /dev/usb \
        #--device /dev/bus/usb \
        #--device /dev/snd \
        #--device /dev/dri \
        #--security-opt seccomp:/etc/docker/seccomp/chrome.json \
        #--group-add video \
}

wiki() {
    del_stopped wiki

    docker run --rm -it \
        -v /etc/localtime:/etc/localtime:ro \
        -v "${HOME}/.weechat:/home/user/.weechat" \
        --read-only \
        --name wiki \
        ${DOCKER_REPO_PREFIX}/dokuwiki
}

skype(){
    del_stopped skype
    relies_on pulseaudio

    docker run -d                                 \
        --volume /etc/localtime:/etc/localtime:ro \
        --volume /tmp/.X11-unix:/tmp/.X11-unix    \
        --link pulseaudio:pulseaudio              \
        --env "DISPLAY=unix${DISPLAY}"            \
        --env PULSE_SERVER=pulseaudio             \
        --security-opt seccomp:unconfined         \
        --device /dev/video0                      \
        --group-add video                         \
        --group-add audio                         \
        --hostname skype                          \
        --name skype                              \
        ${DOCKER_REPO_PREFIX}/skype
}

python3-docker() {
    docker run -it --rm                   \
           --name my-running-script       \
           --volume "$PWD":/usr/src/myapp \
           --workdir /usr/src/myapp       \
           python:3 python "$1"
}

python2-docker() {
    docker run -it --rm                   \
           --name my-running-script       \
           --volume "$PWD":/usr/src/myapp \
           --workdir /usr/src/myapp       \
           python:2 python "$1"
}
